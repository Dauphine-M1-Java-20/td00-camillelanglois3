LANGLOIS

Exercice 1

Question 4 - maven version : 3.6.3

Question 5 - Le groupId permet d'identifier un projet par rapport a d'autres projets, il sert donc a nommer le projet de maniere unique. Le artifactId permet de nommer les differents package

Question 6 - Le repertoire target contient trois elements : classes, generated-sources ainsi que maven-status

Question 8 - Le class path permet d'indiquer à la machine virtuelle quelles sont les chemins des classes et des packages nécessaires à exécuter la classe indiquée à la suite de la ligne   

Question 13 - Celle propriété sert à indiquer avec quelles versions de java les classes compilées doivent etre compatibles


Exercice 2

Question 1 - Nous avons une erreur "no main manifest attribute" dans le jar


Exercice 3

Question 3 - Lorsque l'on réalise cette manipulation, il s'agit d'un raccourci qui permet de faire apparaitre la commande "system.out.println()" (un peu longue à taper en entier) 

Question 4 - Cela fait automatiquement apparaitre "toString()"

Question 5 - Lorsque l'on réalise cette manipulation, cela propose l'écriture de la fonction main

Question 6 - Cela nous propose d'écrire "getToto()" et "setTOTO()"

Question 7 - Cela permet de renommer un champ en renommant toutes les occurences de ce champ présentes dans la classe également

Question 8 - Cela ouvre les classes associées


TD00bis

Exercice 1

Question 2 - Les fichiers sources du projet td00 sont le pom.xml, la classe PrimeCollection.java. Les fichiers ne faisant pas partie des sources du projet sont ceux que contient le répertoire target.


Question 5 - Git nous indique la ligne qui a été modifiée dans le fichier PrimeCollection.java


Exercice 2 

Question 3 - Au niveau du commit où pointe head, nous avons également "Origin master" qui est inscrit, ce qui signifie que le répertoire local et le répertoire distant sont synchronisés sur le même commit

Question 5 - Nous avons une erreur car nous n'avons pas pris en compte les modifications qui ont été apportées auparavant (clone-de-javaavance) avant d'envoyer celles que nous venions de faire (dans javaavance)

Question 6 - Le fichier REPONSES.txt contient la version que nous avions envoyée sur le dépot distant avec clone-de-javaavance, c'est à dire le changement en début de fichier mais il contient également le changement en fin de fichier, git à donc fait en sorte de combiner les deux modifications. On voit que nous avons un nouveau commit qui a servi à assembler la version qui était présente sur javaavance avec la version qui était sur le dépôt GitHub.

Question 7 - Nous aurions eu un conflit et cela aurait été à nous de choisir quelle version conserver









